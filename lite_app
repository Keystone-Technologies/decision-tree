package DT;
use Mojo::Base -base;
use Mojo::DOM;
use Mojo::Log;
use Mojo::Util 'slurp';

use File::Basename;
use File::Spec::Functions qw(catdir catfile);

has log => sub { Mojo::Log->new };
has dom => sub { Mojo::DOM->new(slurp shift->_file) };

has '_file';

has 'dt';
has 'branch';
has 'home';

has 'title';
has 'description';

has 'prompt';
has 'options' => sub { [] };
has 'speedcode';
has 'details';

has 'selection';

sub list_files {
  my $self = shift;
  my $home = shift;
  map { basename $_, '.xml' } grep { /\.xml$/ } @{$home->list_files};
}

sub new {
  my $self = shift->SUPER::new(@_);
  $self->_file(catfile $self->home, $self->dt.".xml");
  $self->title($self->dom->at('tree > title')->text);
  $self->description($self->dom->at('tree > description')->text);
  return $self unless $self->branch;
  my $qrbranch = $self->branch;
  for my $d1 ( grep { $_->size } $self->dom->find('tree > branch')->grep(sub{$_->{id} =~ qr/^$qrbranch$/}) ) {
    if ( $d1->at('speedcode')->[0] ) {
      $self->prompt($d1->at('content')->text);
      $self->speedcode($d1->at('speedcode')->text);
      $self->details($d1->at('details')->text);
    } else {
      $self->prompt($d1->at('content')->text);
      push @{$self->options}, [$_->{target}, $_->text] for grep { $_->text } $d1->find('fork')->[0]->each;
      push @{$self->options}, [$self->pop_branch, "Back"];
    }
  }
  #<fork target="1.1">Cannot connect to the Internet</fork>
  $self->selection($self->dom->at("fork[target=$qrbranch]")->text) if $self->dom->at("fork[target=$qrbranch]");
  $self;
}

sub pop_branch { local @_ = split /\./, shift->branch; pop @_; join '.', @_ }

package main;

use Mojolicious::Lite;
use Mojo::Util qw(camelize);

plugin 'HeaderCondition';

helper spamelize => sub { shift; $_ = camelize(@_); s/::/ /; $_ };
hook after_render => sub { my ($self, $args) = @_; $$args =~ s/\n//g if $self->accepts('', 'json') };

get '/' => sub {
  my $self = shift;
  $self->render(list_files => [DT->list_files($self->app->home)]);
} => 'index';

# $ perl -MMojolicious::Lite -E 'plugin "HeaderCondition"; get "/:dt/#branch" => (headers => {"X-Requested-With" => qr/XMLHttpRequest/}) => {branch => 1} => sub { my $self = shift; $self->render(text=>join "", map { "$_\n" } @{$self->accepts}, map { $self->param($_) } qw/dt branch/) }; app->start' get -H "X-Requested-With: XMLHttpRequest" -H "Accept: application/json" /helpdesk

get "/:dt/#branch" => (headers => {"X-Requested-With" => qr/XMLHttpRequest/}) => {branch => 1} => sub {
  my $self = shift;
  $self->stash(format => 'json') if $self->accepts('', 'json');
  my ($dt, $branch) = ($self->param('dt'), $self->param('branch'));
  $dt = DT->new(dt => $dt, branch => $branch, home => $self->app->home);
  $dt->prompt ? $self->render(dt => $dt) : $self->render_not_found;
} => 'dt';

app->start;

__DATA__
@@ index.html.ep
<html>
  <head>
    <link   href='https://fonts.googleapis.com/css?family=Tinos' rel='stylesheet' type='text/css'>
    <link   href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.0/themes/base/jquery-ui.css" type="text/css" rel="stylesheet" media="all" />
    <script  src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" type="text/javascript"></script>
    <script  src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js" type="text/javascript"></script>
    %# <script  src="http://www.steamdev.com/zclip/js/jquery.zclip.min.js" type="text/javascript"></script>
    <script  src="/js/jquery.zclip.js" type="text/javascript"></script>
    <script type="text/javascript">
      var dt = function () {
        $("a.ajax[href]").each(function(){
          $(this).unbind("click");
          $(this).on("click", function(e) {
            e.preventDefault();
            $.getJSON($(this).attr('href'), function(data){
              if ( $("#dt > div").length >= 1 ) {
                $("#dt div.selection").last().html(data[0]);
              }
              $("#dt").append(data[2]);
              $("#dt").accordion("refresh");
              $("#dt").accordion({active: -1});
              dt();
            });
            return false;
          });
        });
/*
        $("#dt div").last().find("table").zclip('remove');
        $("#dt div").last().find("table").zclip({
          path:'/js/ZeroClipboard.swf',
          copy:function(){
            var str = "Information copied from Decision Tree.\n\n";
            return str.concat($(this).find("td.details").first().val());
          },
          beforeCopy:function(){
            console.log("Copying");
            $(this).css('background','yellow');
          },
          afterCopy:function(){
            console.log("Copied!");
            $(this).css('background','green');
          }
        });
*/
      };
      $(document).ready(function(){
        $("#dt").accordion({
          activate: function(event, ui){
            var active = $("#dt").accordion("option", "active");
            var total = $("#dt > div").length - 1;
            console.log("A1: ", active, " - T1: ", total);
            for ( var i = total; --i; i > active ) {
              if ( active < $("#dt > div").length - 1 ) {
                $("#dt > div").last().remove();
                $("#dt > h3").last().remove();
                $("#dt div.selection").last().html("");
                console.log("A2: ", active, " - T2: ", $("#dt > div").length - 1);
              }
            }
            $("#dt").accordion("refresh");
          }
        });
        dt();
      });
    </script>
  </head>
  <body>
    <a href="<%= url_for 'index' %>">Home</a><br />
    % foreach ( sort @$list_files ) {
      <a class="ajax" href="<%= url_for 'dt', dt => $_ %>"><%= spamelize $_ %></a><br />
    % }
    <hr />
    <div id="dt"></div>
  </body>
  <body>
  </body>
</html>

@@ adt.html.ep
<h1><%= $dt->title %></h1>
<h2><%= $dt->description %></h2>
<hr>

@@ dt.json.ep
[
  "<%= $dt->selection %>",
  "<%= $dt->details %>",
  "<%= include 'json/dt' %>"
]

@@ json/dt.json.ep
<h3>(<%= $dt->branch %>) <%= $dt->prompt %> <div class='selection'></div></h3>
<div>
% if ( $dt->speedcode ) {
  <table>
    <tr><td><b>Select speedcode:</b></td><td class='speedcode'><%= $dt->speedcode %></td></tr>
    <tr><td><b>CnP these details into your ticket details:</b></td><td class='details'><%= $dt->details %></td></tr>
  </table>
% } elsif ( $dt->prompt ) {
  <ul>
  % my $back = pop @{$dt->options};
  % for ( @{$dt->options} ) {
    <li><a class='ajax' href='<%= url_for 'dt', dt => $dt->dt, branch => $_->[0] %>'><%= $_->[1] %><br />
  % }
  % if ( 0 && $back->[0] ) {
    <li><a class='ajax' href='<%= url_for 'dt', dt => $dt->dt, branch => $back->[0] %>'><%= $back->[1] %><br />
  % }
  </ul>
% } else {
  What?<br />
% }
</div>

@@ js/ZeroClipboard.swf (base64)
Q1dTCYgGAAB4nH1V61LbRhTeXV2OJNsYczFgIEC4JCGABSRpSy+B2JDQQtWJ
ocl0BqK1tUZqhOSRZAj/8ih9hz5AXsGZTl+ndHUhxU2nO56z3/l05uye7+wc
6xr6DeUxqpcUhFCNXF9ffxjNcYhRo8U8NruO0IeRLTkm+BpEa4i8/+t3GRGU
rRf5tktDe41dMC8Kpd14Q/DM911GPfHCd6zCLyzwa67Tafo0sAppuOWEHZde
yY1O4ERMbnajyPcKIYteUM+qdYPQD/It12m9jX2XBcSx5EYUON6ZwunOEXsX
AY+O94HsAu8iFnjULe1mYN/je5u2WLnvAsnRNGrZ6rnfDZlxwQKxRV1XSd1u
lPJ1/9KDBB13pDCiZ2ygEdsGj2WHvsXU3dc7taM3e/tHanjDZVqEV2HEzpUG
a3V5dVd4Ocfz+5d1/5w6nnbgU4sF+17bFwPfjzT3k691aEDPGb92KBvNX1kr
mrOjqLNVrVLLb7K1ln9e3WlsVjd0/Um12XXcyPFy6ZHdyHHDkT5tt1JtF/rJ
erqn6Wu+F/ErsWCmPyiRjrYi54KlgZP/k2Tq9gPYSh5APZOYBVra2VicAtfy
n+4qZwHt2E4rVJvszPH2HNcVD2lkS5eOxW3b9f1AtplzZkeKFdDLl/wkibod
myrUsmq241raYdye5ECpdrBf+2GQf0ncA4c3gJelHRrHjd03xs+7L9UMHh9l
ZN149aOSwuOfcnFO3qQmbb0V44aoSVEXlHeikXQzz1/bpzek8E50XN6o4r/K
LfQpU/pMx/J/yz9cxmWhDOOyhMqD5SkJjQnKYnmpIlfuVe5XHlSWKw8rC6Qo
EayoWk7MFwaKg6Whx4AJEBGIBEQGQQFJBaKBlAMpD6QA0gCQIsglICNAxkGY
AFIBMgkwDWQGhFkgc0DuApkHsqDmMZAVIKtA1oBUgejqOmc21E1uHwF5DOQJ
4C+AfAnkKyBbQL4G8g2Qb4F8B+o2wA6QZ4DrIOyCsAfCcw0lUwR/ZvgiOP3I
hwgWcDZIsCipIpJkPmskBBiBgpGiIqQJOJdYPqbiOaRiUcRIQ5hrIfT055yS
iKYVzMLKkKmuDM8aAyInyW1yNCOF22Q5I8Xb5FhGSjLR8n/gnv5q+U+9t4/M
ojnYLtEhc3jljjGCGT4Z7bXL7bG9Udwefz9xjk9Vhl3crtjqqXwifS8hWzbl
JToZmylTbk+vYuMOjsECWjZnkuDZvTmcwbscGvOiKVcxXThZNGVjkQebS+17
pmLcJwl8sI1v4PI2uYEPt4UbuLItxrCwoplgrMagaOZTENf2NK0NryE8gWRC
VE3p6ae5j3aOFwyZb8of6RT3FYn7Y9yvmjlDx1mKGncSfVTC9Z/v6QyZE7q5
rpsburmpm490U+K/12g6WXYc+nR4CKX/H31zGG1z5m9Pt5ok
